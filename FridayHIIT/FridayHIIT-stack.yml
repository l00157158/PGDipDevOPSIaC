AWSTemplateFormatVersion: 2010-09-09
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: String
    Default: L00157158-IAC-keypair-ie
    AllowedValues:
      - l00157158_key_pair
      - l00157158_key_pair_02
      - L00157158-IAC-keypair-ie

  ImageID:
    Description: The AMI ID for the instance
    Type: String
    Default: ami-0db5ca3e5748fb7e2
    AllowedValues:
      - ami-0db5ca3e5748fb7e2

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.micro
      - t2.small

  AvailabilityZone:
    Type: String
    Default: eu-west-1a
    Description: The Availability Zone
    AllowedValues:
      - eu-west-1a
      - eu-west-1b
      - eu-west-1c
Resources:
  FHIITVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 192.168.0.0/25
      EnableDnsSupport: true
      Tags:
        - Key: Project
          Value: FHIIT
  FHIITPubSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      VpcId: !Ref FHIITVPC
      CidrBlock: 192.168.0.0/26
      Tags:
        - Key: Project
          Value: FHIIT
  FHIITJumpBox:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      ImageId:  !Ref ImageID 
      InstanceType: !Ref InstanceType
      SubnetId: !Ref FHIITPubSubnet
      SecurityGroupIds:
        - !Ref FHIITSubNetPubSecurityGroup
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: Project
          Value: FHIIT
        - Key: Name 
          Value: FHIITJumpBox
  FHIITPvtSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      VpcId: !Ref FHIITVPC
      CidrBlock: 192.168.0.64/26
      Tags:
        - Key: Project
          Value: FHIIT
  FHIITSubNetPubSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: FHIITSubNetPubSecurityGroup
      GroupDescription: Security Group for Public Subnet
      VpcId: !Ref FHIITVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access from anywhere
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
          Description: Allow ping requests
      Tags:
        - Key: Purpose
          Value: Public Subnet Security Group
  FHIITSubNetPvtSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: FHIITSubNetPvtSecurityGroup
      GroupDescription: Security Group for Private Subnet
      VpcId: !Ref FHIITVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 192.168.0.0/26
          Description: HTTPS access from IP address within Private subnet
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 192.168.0.0/26
          Description: Allow ping requests from IP address within Private subnet
      Tags:
        - Key: Purpose
          Value: Private Subnet Security Group
        - Key: Project
          Value: FHIIT
  # Define the security group for MySQL
  FHIITMySQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !GetAtt FHIITSubNetPvtSecurityGroup.GroupId
  FHIITMySQLSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Looks like a DB Subnet group is also required for RDS!
      SubnetIds:
        - !Ref FHIITPvtSubnet
      Tags:
        - Key: Project
          Value: FHIIT        
  FHIITAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      ImageId:  !Ref ImageID 
      InstanceType: !Ref InstanceType
      SubnetId: !Ref FHIITPvtSubnet
      SecurityGroupIds:
        - !Ref FHIITSubNetPvtSecurityGroup
      UserData: !Base64 |
        #!/bin/bash -ex
        sudo yum update -y
        sudo yum install -y mysql httpd php php-mysqlnd
        sleep 20
        sudo systemctl start httpd
        sudo systemctl enable httpd
        echo "<?php phpinfo(); ?>" | sudo tee /var/www/html/phpinfo.php
        # I am installing mysql client to demonstrate connection to the RDS instance
      Tags:
        - Key: Project
          Value: FHIIT
        - Key: Name 
          Value:  FHIITAppInstance   
  # MySQL RDS instance
  MySQLDB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      Engine: "mysql"
      MasterUsername: "admin"
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: "db.t2.micro"
      AllocatedStorage: "20"
      DBSubnetGroupName: !Ref FHIITMySQLSubnetGroup
      VPCSecurityGroups:
        - !GetAtt FHIITMySQLSecurityGroup.GroupId
  FHIITigw:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Project
          Value: FHIIT
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref FHIITVPC
      InternetGatewayId: !Ref FHIITigw
